openapi: 3.0.0
info:
  title: GitHub Repository Management Action
  version: 1.1.0
  description: Enhanced action to manage repositories on GitHub, including listing, file management, and branch operations.
servers:
  - url: https://api.github.com
    description: GitHub API server
paths:
  /user/repos:
    get:
      summary: List all repositories for a user
      operationId: listRepositories
      parameters:
        - in: query
          name: per_page
          schema:
            type: integer
            default: 30
            description: Number of repositories to return per page
        - in: query
          name: page
          schema:
            type: integer
            description: Page number of the repositories list
      responses:
        '200':
          description: List of repositories retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Repository'
        '404':
          description: User not found
    post:
      summary: Create a new private GitHub repository
      operationId: createRepository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: The name of the new repository
                description:
                  type: string
                  description: A short description of the repository
                private:
                  type: boolean
                  default: true
                  description: Set to true to create a private repository
                auto_init:
                  type: boolean
                  default: true
                  description: Automatically initialize the repository with a README file
      responses:
        '201':
          description: Repository created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        '400':
          description: Invalid input

  /repos/{owner}/{repo}/contents/{path}:
    get:
      summary: Retrieve SHA for a specific file
      operationId: getSHA
      parameters:
        - in: path
          name: owner
          required: true
          schema:
            type: string
        - in: path
          name: repo
          required: true
          schema:
            type: string
        - in: path
          name: path
          required: true
          schema:
            type: string
          description: The path to the file in the repository, including the filename
      responses:
        '200':
          description: SHA retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sha:
                    type: string
                    description: SHA of the file
        '404':
          description: File or repository not found
    put:
      summary: Create or update a file in the repository
      operationId: createOrUpdateFile
      parameters:
        - in: path
          name: owner
          required: true
          schema:
            type: string
        - in: path
          name: repo
          required: true
          schema:
            type: string
        - in: path
          name: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Commit message for the file creation or update
                content:
                  type: string
                  description: Base64 encoded content of the file
                sha:
                  type: string
                  description: SHA of the file to be updated, not required if creating a new file
      responses:
        '200':
          description: File updated successfully
        '201':
          description: File created successfully
        '404':
          description: File or repository not found

  /repos/{owner}/{repo}/branches:
    get:
      summary: List all branches in a repository
      operationId: listBranches
      parameters:
        - in: path
          name: owner
          required: true
          schema:
            type: string
        - in: path
          name: repo
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of branches retrieved successfully
        '404':
          description: Repository not found
    post:
      summary: Create a new branch in the repository
      operationId: createBranch
      parameters:
        - in: path
          name: owner
          required: true
          schema:
            type: string
        - in: path
          name: repo
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                branch_name:
                  type: string
                  description: Name of the new branch
      responses:
        '201':
          description: Branch created successfully
        '404':
          description: Repository not found

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Repository:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        full_name:
          type: string
        html_url:
          type: string
        updated_at:
          type: string
          format: date-time
          description: Last update time of the repository
        branches_count:
          type: integer
          description: Number of branches in the repository
    # Define other necessary schemas here as required for your API.

security:
  - BearerAuth: []
